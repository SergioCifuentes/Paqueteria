/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paqueteria.ui.Administracion;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import paqueteria.DB.ControladorDB;

/**
 *
 * @author sergio
 */
public class CambioTarifas extends javax.swing.JInternalFrame {

    private LocalDateTime fechaActualizada;
    private float porLibra;
    private float porPriorizacion;
    private float operacionGlobal;

    /**
     * Creates new form CambioTarifas
     */
    public CambioTarifas() {
        initComponents();
        obtenerPreciosYFecha();
        mostrarPreciosActuales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblFechaActualizada = new javax.swing.JLabel();
        btnCambiar = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        spinnerLibra = new javax.swing.JSpinner();
        spinnerPriorizacion = new javax.swing.JSpinner();
        spinnerOperacion = new javax.swing.JSpinner();
        lblCambioLibra = new javax.swing.JLabel();
        lblCambioPriorizacion = new javax.swing.JLabel();
        lblCambioOperacion = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Tarifas De Administracion");
        setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel1.setText("Tarifas Actuales:");

        jLabel2.setForeground(new java.awt.Color(1, 1, 1));
        jLabel2.setText("Fecha De Ultima Actualizacion:");

        jLabel3.setForeground(new java.awt.Color(1, 1, 1));
        jLabel3.setText("Precio Por Libra:");

        jLabel4.setForeground(new java.awt.Color(1, 1, 1));
        jLabel4.setText("Precio Por Priorizacion:");

        jLabel5.setForeground(new java.awt.Color(1, 1, 1));
        jLabel5.setText("Precio Por Operacion Global");

        lblFechaActualizada.setForeground(new java.awt.Color(1, 1, 1));

        btnCambiar.setText("Cambiar");
        btnCambiar.setEnabled(false);
        btnCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.setEnabled(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        spinnerLibra.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 0.01f));
        spinnerLibra.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerLibraStateChanged(evt);
            }
        });

        spinnerPriorizacion.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 0.01f));
        spinnerPriorizacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerPriorizacionStateChanged(evt);
            }
        });

        spinnerOperacion.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 0.01f));
        spinnerOperacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerOperacionStateChanged(evt);
            }
        });

        lblCambioLibra.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lblCambioLibra.setForeground(new java.awt.Color(1, 1, 1));
        lblCambioLibra.setText("*");
        lblCambioLibra.setVisible(false);

        lblCambioPriorizacion.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lblCambioPriorizacion.setForeground(new java.awt.Color(1, 1, 1));
        lblCambioPriorizacion.setText("*");
        lblCambioPriorizacion.setVisible(false);

        lblCambioOperacion.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lblCambioOperacion.setForeground(new java.awt.Color(1, 1, 1));
        lblCambioOperacion.setText("*");
        lblCambioOperacion.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spinnerPriorizacion, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(spinnerLibra)
                            .addComponent(spinnerOperacion))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblCambioPriorizacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCambioLibra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCambioOperacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 32, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(41, 41, 41)
                        .addComponent(lblFechaActualizada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblFechaActualizada, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerLibra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCambioLibra, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerPriorizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCambioPriorizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spinnerOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCambioOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCambiar)
                    .addComponent(btnReset))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spinnerLibraStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerLibraStateChanged
        if ((float) spinnerLibra.getValue() != porLibra) {
            lblCambioLibra.setVisible(true);
        } else {
            lblCambioLibra.setVisible(false);
        }
        verificarCambio();
    }//GEN-LAST:event_spinnerLibraStateChanged

    private void spinnerPriorizacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerPriorizacionStateChanged
        if ((float) spinnerPriorizacion.getValue() != porPriorizacion) {
            lblCambioPriorizacion.setVisible(true);
        } else {
            lblCambioPriorizacion.setVisible(false);
        }
        verificarCambio();
    }//GEN-LAST:event_spinnerPriorizacionStateChanged

    private void spinnerOperacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerOperacionStateChanged
        if ((float) spinnerOperacion.getValue() != operacionGlobal) {
            lblCambioOperacion.setVisible(true);
        } else {
            lblCambioOperacion.setVisible(false);
        }
        verificarCambio();
    }//GEN-LAST:event_spinnerOperacionStateChanged

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        mostrarPreciosActuales();
        verificarCambio();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarActionPerformed
        if (verificarPreciosValidos()) {
            ControladorDB.guardarPreciosAdmin(LocalDateTime.now(), (float) spinnerLibra.getValue(), (float) spinnerPriorizacion.getValue(), (float) spinnerOperacion.getValue());
            JOptionPane.showMessageDialog(this, "CambiosRealizados", "Tarifa", JOptionPane.INFORMATION_MESSAGE);
            obtenerPreciosYFecha();
            mostrarPreciosActuales();
            verificarCambio();

        }
    }//GEN-LAST:event_btnCambiarActionPerformed
    private void obtenerPreciosYFecha() {
        float[] precios = ControladorDB.obtenerPrecioActuales();
        porLibra = precios[0];
        porPriorizacion = precios[1];
        operacionGlobal = precios[2];
        fechaActualizada = ControladorDB.obtenerFechaDePrecioActuales();
    }

    private void mostrarPreciosActuales() {
        lblFechaActualizada.setText(String.valueOf(fechaActualizada.format(DateTimeFormatter.ofPattern("dd/MM/yyyy hh:mm"))));
        spinnerLibra.setValue(porLibra);
        spinnerPriorizacion.setValue(porPriorizacion);
        spinnerOperacion.setValue(operacionGlobal);
    }

    private void verificarCambio() {
        if (lblCambioLibra.isVisible() || lblCambioOperacion.isVisible() || lblCambioPriorizacion.isVisible()) {
            btnCambiar.setEnabled(true);
            btnReset.setEnabled(true);
        } else {
            btnCambiar.setEnabled(false);
            btnReset.setEnabled(false);
        }
    }

    private boolean verificarPreciosValidos() {
        try {
            float precio;
            System.out.println(spinnerLibra.getValue());
            precio = (float) spinnerLibra.getValue();
            precio = (float) spinnerOperacion.getValue();
            precio = (float) spinnerPriorizacion.getValue();
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCambiar;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblCambioLibra;
    private javax.swing.JLabel lblCambioOperacion;
    private javax.swing.JLabel lblCambioPriorizacion;
    private javax.swing.JLabel lblFechaActualizada;
    private javax.swing.JSpinner spinnerLibra;
    private javax.swing.JSpinner spinnerOperacion;
    private javax.swing.JSpinner spinnerPriorizacion;
    // End of variables declaration//GEN-END:variables
}
